{"version":3,"sources":["static/1.jpg","assets/icons/facebook.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","props","role","viewBox","ref","ForwardRef","forwardRef","Text","Typography","App","React","useState","isModalVisible","setIsModalVisible","console","log","className","href","rel","style","margin","src","logo","height","width","borderRadius","boxShadow","onClick","marginTop","visible","onOk","onCancel","fontWeight","color","fontStyle","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e2eb28f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.c6f5c4c5.jpg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.9981 11.9991C23.9981 5.37216 18.626 0 11.9991 0C5.37216 0 0 5.37216 0 11.9991C0 17.9882 4.38789 22.9522 10.1242 23.8524V15.4676H7.07758V11.9991H10.1242V9.35553C10.1242 6.34826 11.9156 4.68714 14.6564 4.68714C15.9692 4.68714 17.3424 4.92149 17.3424 4.92149V7.87439H15.8294C14.3388 7.87439 13.8739 8.79933 13.8739 9.74824V11.9991H17.2018L16.6698 15.4676H13.8739V23.8524C19.6103 22.9522 23.9981 17.9882 23.9981 11.9991Z\"\n});\n\nvar SvgFacebook = function SvgFacebook(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    role: \"img\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgFacebook, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/facebook.50f13391.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { ReactComponent as IconFacebook } from './assets/icons/facebook.svg';\n\nimport { Typography, Tag, Modal } from 'antd';\n\n\nimport \"./App.css\";\n\nimport logo from './static/1.jpg'\nimport Title from 'antd/lib/skeleton/Title';\n\n\n\nfunction onChange(a, b, c) {\n  console.log(a, b, c);\n}\n\nconst {Text} = Typography\n\nconst App = () => {\n\n  const [isModalVisible, setIsModalVisible] = React.useState(false);\n\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  console.log(isModalVisible)\n\n    return (\n      <div className=\"card\">\n        <div className=\"header\">\n          <div className=\"logo\">\n            <a href=\".\">Mark Data Nepal</a>\n          </div>\n          <div className=\"social\">\n            <a href=\"https://facebook.com\" title=\"Facebook\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <IconFacebook className=\"icon\" />\n            </a>\n          </div>\n        </div>\n        <div style={{margin:\"100px\"}}  className=\"content\">\n          <div  className=\"title-holder\">\n            <img src={logo} height=\"150\" width=\"150\" style={{borderRadius: \"10rem\", boxShadow:\"1rem\"}} />\n            <h1>Mark Data Nepal</h1>\n            <p>Website under Maintenance. Please check back to know more.  Kindly send us an email for your urgent research related needs.</p>\n          </div>\n          <a  href=\"mailto:mark.data.nepal@gmail.com\">\n            <div className=\"cta\">For Email</div>\n          </a>\n          <a  onClick={showModal}>\n            <div style={{marginTop:\"10px\"}} className=\"cta\">Contact Details</div>\n          </a>\n          \n          <Modal title=\"Contact Details\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n          <p>\n          <Text style={{fontWeight:\"bolder\", marginTop:\"5px\"}} >Ramesh Chandra Bhandari </Text><br/>\n          <Tag color=\"red\">Team Lead</Tag><br/>\n          <Text style={{fontStyle:\"italic\", }} >bhandari.ramesh.nepal@gmail.com</Text><br/>\n          <Text style={{fontStyle:\"italic\"}} >+977 9849115076 </Text><br/>\n          </p>\n          <p>\n          <Text style={{fontWeight:\"bolder\",  marginTop:\"5px\"}} >Ramesh Pradhan </Text><br/>\n          <Tag color=\"blue\">IT Manager</Tag><br/>\n          <Text style={{fontStyle:\"italic\"}} >pradhan.ramesh.nepal@gmail.com</Text><br/>\n          <Text style={{fontStyle:\"italic\"}} >+977 9841201001 </Text><br/>\n          </p>\n          <p>\n          <Text style={{fontWeight:\"bolder\",  marginTop:\"5px\"}} >Nabraj Karki</Text><br/>\n          <Tag color=\"cyan\">Field Manager</Tag><br/>\n          <Text style={{fontStyle:\"italic\"}} >nabraj.karki.nepal@gmail.com</Text><br/>\n          <Text style={{fontStyle:\"italic\"}} >+977 9841331183 </Text><br/>\n          </p>\n        </Modal>\n\n\n        </div>\n        <div className=\"footer\" >\n          <span> All Rights Reserved Mark Data.</span>\n        </div>\n      </div>\n    );\n  }\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport \"./styles/fonts.css\";\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}